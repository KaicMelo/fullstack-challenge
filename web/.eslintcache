[{"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\App.tsx":"1","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\reportWebVitals.ts":"2","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\routes.tsx":"3","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\index.tsx":"4","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\services\\api.ts":"5","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Login\\index.tsx":"6","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\assets\\components\\PageHeader\\index.tsx":"7","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\List\\index.tsx":"8","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Create\\index.tsx":"9","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Edit\\index.tsx":"10","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Delete\\index.tsx":"11"},{"size":183,"mtime":1611332143378,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1611348267792,"results":"14","hashOfConfig":"13"},{"size":720,"mtime":1611345649024,"results":"15","hashOfConfig":"13"},{"size":500,"mtime":1606692032245,"results":"16","hashOfConfig":"13"},{"size":121,"mtime":1611251117091,"results":"17","hashOfConfig":"13"},{"size":2698,"mtime":1611348650291,"results":"18","hashOfConfig":"13"},{"size":1352,"mtime":1611346380080,"results":"19","hashOfConfig":"13"},{"size":2474,"mtime":1611347960612,"results":"20","hashOfConfig":"13"},{"size":4420,"mtime":1611346662838,"results":"21","hashOfConfig":"13"},{"size":5074,"mtime":1611360800731,"results":"22","hashOfConfig":"13"},{"size":5076,"mtime":1611346644829,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ukwcdz",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\App.tsx",["50"],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\reportWebVitals.ts",[],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\routes.tsx",[],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\index.tsx",[],["51","52"],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\services\\api.ts",[],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Login\\index.tsx",[],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\assets\\components\\PageHeader\\index.tsx",["53","54"],"import React,{ FormEvent } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport backIcons from '../../images/return.svg';\r\nimport backIcon from '../../images/arrow-left.svg';\r\nimport corteLogo from '../../images/fullstackchallenge.png';\r\n\r\nimport './styles.css';\r\n\r\ninterface PageHeaderProps {\r\n    title?: string;\r\n}\r\nfunction handleExit(event: FormEvent){\r\n    \r\n    localStorage.removeItem('token');\r\n}\r\n\r\nconst Pageheader: React.FC<PageHeaderProps> = (props) => {\r\n    if(!localStorage.getItem('token')){\r\n        return(\r\n            <Redirect to={{pathname:'/', state:{next: true}}} />\r\n        );\r\n    }\r\n    return (\r\n        <header className='page-header-schedule'>\r\n            <div className='top-bar-container-schedule'>\r\n                <img src={corteLogo} alt='cortar' />\r\n                <form  onSubmit={handleExit}>\r\n                    <button type='submit' className='exit-button'>Sair</button>\r\n                </form>\r\n            </div>\r\n            <div className='header-content-schedule'>\r\n                <Link to='/list' className='button-control'>\r\n                    Listar\r\n                </Link>\r\n                <Link to='/create' className='button-control'>\r\n                    Cadastrar\r\n                </Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Pageheader;","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\List\\index.tsx",["55","56","57","58","59","60"],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Create\\index.tsx",["61","62","63"],"import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport corteLogo from '../../assets/images/fullstackchallenge.png';\r\n// import './style.css';\r\nimport api from '../../services/api';\r\nimport Pageheader from '../../assets/components/PageHeader';\r\n\r\nconst currencyConfig = {\r\n    locale: \"pt-BR\",\r\n    formats: {\r\n        number: {\r\n            BRL: {\r\n                style: \"currency\",\r\n                currency: \"BRL\",\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nasync function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n}\r\n\r\nconst Login = () => {\r\n    const [reqName, setName] = useState<string>(\"\");\r\n    const [reqInicialValue, setInitialValue] = useState<string>(\"\");\r\n    const [reqResponsible, setResponsible] = useState<string>(\"\");\r\n    const [reqUsed, setUsed] = useState<string>(\"\");\r\n    const [reqStartDate, setStartDate] = useState<string>(\"\");\r\n    const [reqEndDate, setEndDate] = useState<string>(\"\");\r\n\r\n    function handName(event: ChangeEvent<HTMLInputElement>) {\r\n        const name = event.target.value;\r\n        setName(name);\r\n    }\r\n    function handInitialValue(event: ChangeEvent<HTMLInputElement>) {\r\n        const initial = event.target.value;\r\n        setInitialValue(initial);\r\n    }\r\n    function handResponsible(event: ChangeEvent<HTMLInputElement>) {\r\n        const responsible = event.target.value;\r\n        setResponsible(responsible);\r\n    }\r\n    function handUsed(event: ChangeEvent<HTMLInputElement>) {\r\n        const used = event.target.value;\r\n        setUsed(used);\r\n    }\r\n    function handStartDate(event: ChangeEvent<HTMLInputElement>) {\r\n        const start = event.target.value;\r\n        setStartDate(start);\r\n    }\r\n    function handEndDate(event: ChangeEvent<HTMLInputElement>) {\r\n        const end = event.target.value;\r\n        setEndDate(end);\r\n    }\r\n\r\n    return (\r\n        <div id='page-history' className='container'>\r\n            <Pageheader title='Menu' />\r\n\r\n            <form onSubmit={handleSubmit} id='form-control'>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-name'>\r\n                        Nome do Leilão:\r\n                        </label>\r\n                    <input type=\"text\" id='input-name' value={reqName} onChange={handName} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-imitial-value'>\r\n                        Valor Inicial:\r\n                        </label>\r\n                    <input type=\"number\" id='input-imitial-value' value={reqInicialValue} onChange={handInitialValue} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-responsible'>\r\n                        Responsável:\r\n                        </label>\r\n                    <input type=\"text\" id='input-responsible' value={reqResponsible} onChange={handResponsible} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-used'>\r\n                        É usado ?\r\n                        </label>\r\n                    <input type=\"text\" id='input-used' value={reqUsed} onChange={handUsed} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-start-date'>\r\n                        Data de Abertura\r\n                        </label>\r\n                    <input type=\"date\" id='input-start-date' value={reqStartDate} onChange={handStartDate} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-end-date'>\r\n                        Data de Finalização\r\n                        </label>\r\n                    <input type=\"date\" id='input-end-date' value={reqEndDate} onChange={handEndDate} />\r\n                </div>\r\n\r\n                <div className='buttons-container'>\r\n                    <Link to='/list' className='button-control alter-button'> \r\n                        Salvar\r\n                    </Link>\r\n                    <Link to='/list' className='button-control cancel-button'> \r\n                        Cancelar\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Edit\\index.tsx",["64","65","66","67"],"C:\\Users\\kakak\\Desktop\\fullstack-challenge\\web\\src\\pages\\Delete\\index.tsx",["68","69","70","71"],"import React, { useEffect, useState, ChangeEvent, FormEvent, Component } from 'react';\r\nimport { Link, useParams, Redirect  } from 'react-router-dom';\r\nimport './style.css';\r\nimport api from '../../services/api';\r\nimport Pageheader from '../../assets/components/PageHeader';\r\n\r\ninterface Item {\r\n    id: number,\r\n    name: string,\r\n    initial_value: number,\r\n    responsible: string,\r\n    used: boolean,\r\n    start_date: string,\r\n    end_date: string\r\n}\r\n\r\nasync function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n}\r\n\r\ninterface obgParams{\r\n    id: string\r\n}\r\nconst Edit = () => { \r\n\r\n    const [reqName, setName] = useState<string>(\"\");\r\n    const [reqInicialValue, setInitialValue] = useState<string>(\"\");\r\n    const [reqResponsible, setResponsible] = useState<string>(\"\");\r\n    const [reqUsed, setUsed] = useState<string>(\"\");\r\n    const [reqStartDate, setStartDate] = useState<string>(\"\");\r\n    const [reqEndDate, setEndDate] = useState<string>(\"\");\r\n\r\n    function handName(event: ChangeEvent<HTMLInputElement>) {\r\n        const name = event.target.value;\r\n        setName(name);\r\n    }\r\n    function handInitialValue(event: ChangeEvent<HTMLInputElement>) {\r\n        const initial = event.target.value;\r\n        setInitialValue(initial);\r\n    }\r\n    function handResponsible(event: ChangeEvent<HTMLInputElement>) {\r\n        const responsible = event.target.value;\r\n        setResponsible(responsible);\r\n    }\r\n    function handUsed(event: ChangeEvent<HTMLInputElement>) {\r\n        const used = event.target.value;\r\n        setUsed(used);\r\n    }\r\n    function handStartDate(event: ChangeEvent<HTMLInputElement>) {\r\n        const start = event.target.value;\r\n        setStartDate(start);\r\n    }\r\n    function handEndDate(event: ChangeEvent<HTMLInputElement>) {\r\n        const end = event.target.value;\r\n        setEndDate(end);\r\n    }\r\n\r\n    const params: obgParams = useParams();\r\n    \r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        api.get('auctions/'+params.id,config).then(response => {\r\n            setName(response.data.auctions.name);\r\n            setInitialValue(response.data.auctions.initial_value);\r\n            setResponsible(response.data.auctions.responsible);\r\n            setUsed(response.data.auctions.used);\r\n            const start = response.data.auctions.start_date.split('T');\r\n            setStartDate(start[0]);\r\n            const end = response.data.auctions.end_date.split('T');\r\n            setEndDate(end[0]);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div id='page-history' className='container'>\r\n            <Pageheader title='Menu' />\r\n\r\n            <form onSubmit={handleSubmit} id='form-control'>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-name'>\r\n                        Nome do Leilão:\r\n                        </label>\r\n                    <input type=\"text\" id='input-name' value={reqName} onChange={handName} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-imitial-value'>\r\n                        Valor Inicial:\r\n                        </label>\r\n                    <input type=\"number\" id='input-imitial-value' value={reqInicialValue} onChange={handInitialValue} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-responsible'>\r\n                        Responsável:\r\n                        </label>\r\n                    <input type=\"text\" id='input-responsible' value={reqResponsible} onChange={handResponsible} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-used'>\r\n                        É usado ?\r\n                        </label>\r\n                    <input type=\"text\" id='input-used' value={reqUsed} onChange={handUsed} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-start-date'>\r\n                        Data de Abertura\r\n                        </label>\r\n                    <input type=\"date\" id='input-start-date' value={reqStartDate} onChange={handStartDate} />\r\n                </div>\r\n                <div className='input-form'>\r\n                    <label htmlFor='input-end-date'>\r\n                        Data de Finalização\r\n                        </label>\r\n                    <input type=\"date\" id='input-end-date' value={reqEndDate} onChange={handEndDate} />\r\n                </div>\r\n\r\n                <div className='buttons-container'>\r\n                    <Link to='/list' className='button-control alter-button'> \r\n                        Deletar\r\n                    </Link>\r\n                    <Link to='/list' className='button-control cancel-button'> \r\n                        Cancelar\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Edit;",{"ruleId":null,"fatal":true,"severity":2,"message":"72","line":6,"column":0},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":1,"column":38,"nodeType":"79","messageId":"80","endLine":1,"endColumn":49},{"ruleId":"77","severity":1,"message":"83","line":1,"column":51,"nodeType":"79","messageId":"80","endLine":1,"endColumn":60},{"ruleId":"77","severity":1,"message":"84","line":1,"column":62,"nodeType":"79","messageId":"80","endLine":1,"endColumn":71},{"ruleId":"77","severity":1,"message":"85","line":2,"column":16,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"86","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":35,"column":8,"nodeType":"89","endLine":35,"endColumn":10,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"86","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"91","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":11},{"ruleId":"77","severity":1,"message":"92","line":8,"column":7,"nodeType":"79","messageId":"80","endLine":8,"endColumn":21},{"ruleId":"77","severity":1,"message":"84","line":1,"column":62,"nodeType":"79","messageId":"80","endLine":1,"endColumn":71},{"ruleId":"77","severity":1,"message":"93","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":35},{"ruleId":"77","severity":1,"message":"94","line":7,"column":11,"nodeType":"79","messageId":"80","endLine":7,"endColumn":15},{"ruleId":"87","severity":1,"message":"95","line":78,"column":8,"nodeType":"89","endLine":78,"endColumn":10,"suggestions":"96"},{"ruleId":"77","severity":1,"message":"84","line":1,"column":62,"nodeType":"79","messageId":"80","endLine":1,"endColumn":71},{"ruleId":"77","severity":1,"message":"93","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":35},{"ruleId":"77","severity":1,"message":"94","line":7,"column":11,"nodeType":"79","messageId":"80","endLine":7,"endColumn":15},{"ruleId":"87","severity":1,"message":"95","line":78,"column":8,"nodeType":"89","endLine":78,"endColumn":10,"suggestions":"97"},"Parsing error: Declaration or statement expected.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'backIcons' is defined but never used.","Identifier","unusedVar","'backIcon' is defined but never used.","'ChangeEvent' is defined but never used.","'FormEvent' is defined but never used.","'Component' is defined but never used.","'useHistory' is defined but never used.","'corteLogo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'api' is defined but never used.","'currencyConfig' is assigned a value but never used.","'Redirect' is defined but never used.","'Item' is defined but never used.","React Hook useEffect has missing dependencies: 'config' and 'params.id'. Either include them or remove the dependency array.",["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},"Update the dependencies array to be: [config]",{"range":"108","text":"109"},"Update the dependencies array to be: [config, params.id]",{"range":"110","text":"111"},{"range":"112","text":"111"},[1076,1078],"[config]",[2616,2618],"[config, params.id]",[2617,2619]]